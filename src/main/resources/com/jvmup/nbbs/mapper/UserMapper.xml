<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jvmup.nbbs.dao.UserDao">
    <resultMap id="otherUserResult" type="user">
        <result property="nickname" column="nickname"/>
        <result property="sex" column="sex" typeHandler="com.jvmup.nbbs.util.SexTypeHandler"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="createTime"/>
    </resultMap>
    <resultMap id="userResult" type="user" autoMapping="true">
        <result column="sex" property="sex" typeHandler="com.jvmup.nbbs.util.SexTypeHandler"/>
        <result column="create_time" property="createTime"/>
        <collection property="fanList" ofType="user" columnPrefix="fans_" resultMap="otherUserResult"/>
        <collection property="blackList" ofType="user" columnPrefix="black_" resultMap="otherUserResult"/>
        <collection property="followList" ofType="user" columnPrefix="follow_" resultMap="otherUserResult"/>
    </resultMap>
    <select id="getIdByNickname" resultType="int">
        select id as id from user where nickname =#{nickName}
    </select>
    <update id="updateUserInfo" parameterType="user">
        update user
        <set>
            <if test="sex != null">sex=#{sex},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="signature !=null and phone != ''"> signature = #{signature},</if>
            <if test="avatar !=null and avatar != ''">avatar = #{avatar},</if>
        </set>
        where id= #{id}
    </update>
    <update id="updateMail">
        update user <set><if test="email!=null and email !=''"> email=#{email}</if></set> where id= #{id}
    </update>
    <update id="updatePassword">
        update user <set><if test="password != null and password !=''">password = #{password}</if></set> where password = #{password}
    </update>

    <update id="updateEx">
        update user set ex = ex+#{num} where id = #{id}
    </update>

    <update id="updateStatus">
        update user set status = #{status} where id =#{id}
    </update>

    <select id="getUserInfo" resultMap="userResult">
        select u1.avatar, u1.nickname,u1.email,u1.sex,u1.signature,u1.ex,u1.create_time,u1.phone from user u1 where u1.id = #{id}
    </select>

    <select id="getFans" resultMap="otherUserResult">
        select sex ,nickname ,create_time ,avatar  from user_fans left join user on user.id= user_fans.fllow_id where user_fans.fllowed_id = #{id}
    </select>
    <select id="getFollows" resultMap="otherUserResult">
        select sex ,nickname ,create_time ,avatar from user_fans left join user on user.id= user_fans.fllowed_id where user_fans.fllow_id = #{id}
    </select>
    <select id="getBlack" resultMap="otherUserResult">
        select sex ,nickname ,create_time ,avatar as black_avatar from  user_black left join user on user.id = user_black.blacked_id where user_black.black_id = #{id}
    </select>
    <insert id="addFans">
        insert into user_fans (fllow_id, fllowed_id) values (#{reqId},#{desId});
    </insert>
    <insert id="addBlack">
        insert into user_black (black_id, blacked_id) values (#{reqId},#{desId});
    </insert>
    <insert id="addFollow">
        insert into user_fans (fllowed_id, fllow_id) values (#{reqId},#{desId});
    </insert>
    <insert id="addWord">
        insert into user_word (user_id, word) values (#{userId},#{word});
    </insert>
    <delete id="removeFans">
        delete from user_fans where fllow_id=#{reqId} and fllowed_id=#{desId}
    </delete>
    <delete id="removeBlack">
        delete from user_black where black_id=#{reqId} and blacked_id=#{desId}
    </delete>
    <delete id="removeFollow">
        delete from user_fans where fllowed_id=#{reqId} and fllow_id=#{desId}
    </delete>
    <delete id="removeWord">
        delete from user_word where user_id=#{userId} and word = #{word}
    </delete>
    <insert id="addUser" keyProperty="id" useGeneratedKeys="true">
        insert into user(nickname, email, password) values (#{nickname},#{email},#{password})
    </insert>
    <select id="findUserPwd" resultType="string">
        select password from user where id =#{id}
    </select>
    <select id="getNicknameByEmail" resultType="string">
        select nickname from user where email=#{email}
    </select>
    <select id="getIdByEmail" resultType="int">
        select id from user where email=#{email}
    </select>
    <select id="getMaskWord" resultType="string">
        select word from user_word where user_id=#{id}
    </select>
</mapper>
